<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rookie Zcy</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-17T09:29:14.761Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zcy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建Hexo，以及多平台管理</title>
    <link href="http://yoursite.com/2018/01/17/%E6%90%AD%E5%BB%BAHexo%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86-1/"/>
    <id>http://yoursite.com/2018/01/17/搭建Hexo，以及多平台管理-1/</id>
    <published>2018-01-17T09:26:45.000Z</published>
    <updated>2018-01-17T09:29:14.761Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建Hexo，以及多平台管理"><a href="#搭建Hexo，以及多平台管理" class="headerlink" title="搭建Hexo，以及多平台管理"></a>搭建Hexo，以及多平台管理</h1><p>标签（空格分隔）： github</p><hr><h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h3><p>之前都是通过github的redme.md来编写自己的博客，后来在与朋友的聊天中得知了通过hexo可以搭建漂亮的博客，搭建过程中也遇到了许多小问题。</p><h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><h4 id="1-创建安装git以及创建github远程仓库（忽略）"><a href="#1-创建安装git以及创建github远程仓库（忽略）" class="headerlink" title="1.创建安装git以及创建github远程仓库（忽略）"></a>1.创建安装git以及创建github远程仓库（忽略）</h4><h4 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2.安装nodejs"></a>2.安装nodejs</h4><h4 id="3-配置hexo"><a href="#3-配置hexo" class="headerlink" title="3.配置hexo"></a>3.配置hexo</h4><h5 id="3-1下载安装hexo"><a href="#3-1下载安装hexo" class="headerlink" title="3.1下载安装hexo"></a>3.1下载安装hexo</h5><pre><code>$ npm install -g hexo-cli</code></pre><h5 id="3-2若接下来使用hexo命令，出现以下错误"><a href="#3-2若接下来使用hexo命令，出现以下错误" class="headerlink" title="3.2若接下来使用hexo命令，出现以下错误"></a>3.2若接下来使用hexo命令，出现以下错误</h5><pre><code>ERROR Deployer not found : github</code></pre><p>则运行以下命令</p><pre><code>$ npm install hexo-deployer-git --save</code></pre><h5 id="3-3创建文件夹-blog，安装依赖包"><a href="#3-3创建文件夹-blog，安装依赖包" class="headerlink" title="3.3创建文件夹 /blog，安装依赖包"></a>3.3创建文件夹 /blog，安装依赖包</h5><pre><code>$ hexo init</code></pre><h5 id="3-4安装依赖包"><a href="#3-4安装依赖包" class="headerlink" title="3.4安装依赖包"></a>3.4安装依赖包</h5><pre><code>$ npm install</code></pre><h5 id="3-5提交以及本地测试"><a href="#3-5提交以及本地测试" class="headerlink" title="3.5提交以及本地测试"></a>3.5提交以及本地测试</h5><pre><code>$ hexo g //生成</code></pre><p>$ hexo s //发布到本地<br>    $ hexo d   // 部署<br>或者</p><pre><code>hexo d -g #在部署前先生成</code></pre><p>然后用浏览器访问<a href="http://localhost:4000/，此时，你应该看到了一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。" target="_blank" rel="noopener">http://localhost:4000/，此时，你应该看到了一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。</a></p><h4 id="4-部署到github"><a href="#4-部署到github" class="headerlink" title="4.部署到github"></a>4.部署到github</h4><h5 id="4-1在github创建Repository，格式如下："><a href="#4-1在github创建Repository，格式如下：" class="headerlink" title="4.1在github创建Repository，格式如下："></a>4.1在github创建Repository，格式如下：</h5><pre><code>yourname.github.io</code></pre><h5 id="4-2hexo的配置文件，-hexo-config-yml"><a href="#4-2hexo的配置文件，-hexo-config-yml" class="headerlink" title="4.2hexo的配置文件，\hexo_config.yml"></a>4.2hexo的配置文件，\hexo_config.yml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: http://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site这下面的几项配置都很简单，你看我的博客就知道分别是什么意思</span><br><span class="line">title: Chillax blog#博客名</span><br><span class="line">subtitle: Goals determine what you are going to be#副标题</span><br><span class="line">description: Goals determine what you are going to be #用于搜索，没有直观表现</span><br><span class="line">author: huangjunhui#作者</span><br><span class="line">language: zh-CN#语言</span><br><span class="line">timezone: #时区，此处不填写，hexo会以你目前电脑的时区为默认值</span><br><span class="line"></span><br><span class="line"># URL暂不配置，使用默认值</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://opiece.me  #域名</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory暂不配置，使用默认值</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing文章布局等，使用默认值</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag暂不配置，使用默认值</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format时间格式，使用默认值</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10#每页显示的文章数，0表示不分页</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions插件配置，暂时不配置</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">## Themes: http://hexo.io/themes/</span><br><span class="line">plugins:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">theme: light#使用的主题，即：E:\myblog\themes文件夹下的主题文件夹名</span><br><span class="line"></span><br><span class="line">feed:#之后配置rss会用，使用如下配置即可</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20  </span><br><span class="line"></span><br><span class="line"># Deployment用于部署到github，之前已经配置过</span><br><span class="line">## Docs: http://hexo.io/docs/deployment.html</span><br><span class="line"></span><br><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repository: http://github.com/huangjunhui/huangjunhui.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>部署上github的配置重中之中在于这里：</p><pre><code>    deploy:       type: gitrepository: http://github.com/huangjunhui/huangjunhui.github.io.git   branch: master</code></pre><h3 id="5、发表一篇文章"><a href="#5、发表一篇文章" class="headerlink" title="5、发表一篇文章"></a>5、发表一篇文章</h3><p>终端输入：</p><pre><code>// 新建一篇文章hexo new &quot;文章标题&quot;</code></pre><p>我们可以在本地博客文件夹source-&gt;_post文件夹下看到我们新建的markdown文件。</p><h2 id="6、更换电脑后如何管理hexo博客"><a href="#6、更换电脑后如何管理hexo博客" class="headerlink" title="6、更换电脑后如何管理hexo博客"></a>6、更换电脑后如何管理hexo博客</h2><h3 id="6-1先从github上clone下博客的源文件"><a href="#6-1先从github上clone下博客的源文件" class="headerlink" title="6.1先从github上clone下博客的源文件"></a>6.1先从github上clone下博客的源文件</h3><pre><code>$ git clone git@github.com:yourname/yourname.github.io.git</code></pre><h3 id="6-2在本地创个文件夹，获取hexo的源文件（若没有安装hexo，则看上边的安装教程-npm-install-g-hexo）"><a href="#6-2在本地创个文件夹，获取hexo的源文件（若没有安装hexo，则看上边的安装教程-npm-install-g-hexo）" class="headerlink" title="6.2在本地创个文件夹，获取hexo的源文件（若没有安装hexo，则看上边的安装教程 npm install -g hexo）"></a>6.2在本地创个文件夹，获取hexo的源文件（若没有安装hexo，则看上边的安装教程 npm install -g hexo）</h3><pre><code>$ hexo init</code></pre><h3 id="6-3将以下文件拷贝到从github上克隆下来的文件中"><a href="#6-3将以下文件拷贝到从github上克隆下来的文件中" class="headerlink" title="6.3将以下文件拷贝到从github上克隆下来的文件中"></a>6.3将以下文件拷贝到从github上克隆下来的文件中</h3><pre><code>_config.yml package.json scaffolds/ source/ themes/</code></pre><h3 id="6-4模块安装，执行命令：-克隆目录"><a href="#6-4模块安装，执行命令：-克隆目录" class="headerlink" title="6.4模块安装，执行命令：/克隆目录"></a>6.4模块安装，执行命令：/克隆目录</h3><pre><code>npm installnpm install hexo-deployer-git --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --save</code></pre><h3 id="6-5部署，执行命令："><a href="#6-5部署，执行命令：" class="headerlink" title="6.5部署，执行命令："></a>6.5部署，执行命令：</h3><pre><code>hexo ghexo deploy</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建Hexo，以及多平台管理&quot;&gt;&lt;a href=&quot;#搭建Hexo，以及多平台管理&quot; class=&quot;headerlink&quot; title=&quot;搭建Hexo，以及多平台管理&quot;&gt;&lt;/a&gt;搭建Hexo，以及多平台管理&lt;/h1&gt;&lt;p&gt;标签（空格分隔）： github&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建Hexo，以及多平台管理</title>
    <link href="http://yoursite.com/2018/01/17/%E6%90%AD%E5%BB%BAHexo%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/01/17/搭建Hexo，以及多平台管理/</id>
    <published>2018-01-17T09:26:37.000Z</published>
    <updated>2018-01-17T09:26:37.875Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Design Pattern</title>
    <link href="http://yoursite.com/2018/01/17/Design-Pattern-1/"/>
    <id>http://yoursite.com/2018/01/17/Design-Pattern-1/</id>
    <published>2018-01-17T08:14:46.000Z</published>
    <updated>2018-01-17T08:23:20.362Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: Design Pattern<br>date: 2018-01-17 16:14:42</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><p><strong>设计模式（Design Pattern）</strong>是一套呗反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结，使用设计模式是为了可重用代码、让代码更容易被他人理解并且保证代码可靠性。</p><h2 id="一、概况"><a href="#一、概况" class="headerlink" title="一、概况"></a>一、概况</h2><p>设计模式分为三大类：</p><ol><li><p>创建型模式（描述如何创建对象），共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。</p></li><li><p>结构型模式（描述如何实现类或对象的组合），共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。</p></li><li><p>行为型模式（描述类或对象怎样交互以及怎样分配职责），共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</p></li></ol><h2 id="二、设计模式的七大原则"><a href="#二、设计模式的七大原则" class="headerlink" title="二、设计模式的七大原则"></a>二、设计模式的七大原则</h2><p>1、<strong>单一职责原则(Single Responsibility Principle,SRP)</strong></p><p>一个类只负责一个功能领域中的相应职责。</p><p>2、<strong>开闭原则（Open Close Principle）</strong></p><p>开闭原则就是说对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。</p><p>3、<strong>里氏代换原则（Liskov Substitution Principle）</strong></p><p>所有引用基类对象的地方能够透明地使用其子类的对象。<br>实际上可以这样理解：（1）子类的能力必须大于等于父类，即父类可以使用的方法，子类都可以使用。（2）返回值也是同样的道理。假设一个父类方法返回一个List，子类返回一个ArrayList，这当然可以。如果父类方法返回一个ArrayList，子类返回一个List，就说不通了。这里子类返回值的能力是比父类小的。（3）还有抛出异常的情况。任何子类方法可以声明抛出父类方法声明异常的子类。<br>而不能声明抛出父类没有声明的异常。</p><p>4、<strong>依赖倒转原则（Dependence Inversion Principle）</strong></p><p>这个是开闭原则的基础，抽象不应该依赖于细节，细节应该依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。</p><p>5、<strong>接口隔离原则（Interface Segregation Principle）</strong></p><p>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。还是一个降低类之间的耦合度的意思，从这儿我们看出，其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级和维护方便。所以上文中多次出现：降低依赖，降低耦合。</p><p>6、<strong>迪米特法则（最少知道原则）（Demeter Principle）</strong></p><p>为什么叫最少知道原则，就是说：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。</p><p>7、<strong>合成复用原则（Composite Reuse Principle）</strong></p><p>原则是尽量使用合成/聚合的方式，而不是继承来达到复用的目的。</p><h2 id="三、创建型模式"><a href="#三、创建型模式" class="headerlink" title="三、创建型模式"></a>三、创建型模式</h2><p>1、<strong>抽象工厂模式(Abstract factory pattern)</strong>: 提供一个接口, 用于创建相关或依赖对象的家族, 而不需要指定具体类.</p><p>2、<strong>生成器模式(Builder pattern)</strong>: 使用生成器模式封装一个产品的构造过程, 并允许按步骤构造. 将一个复杂对象的构建与它的表示分离,<br>使得同样的构建过程可以创建不同的表示.</p><p>3、<strong>工厂模式(factory method pattern)</strong>: 定义了一个创建对象的接口, 但由子类决定要实例化的类是哪一个. 工厂方法让类把实例化推迟到子类.</p><p>4、<strong>原型模式(prototype pattern)</strong>: 当创建给定类的实例过程很昂贵或很复杂时, 就使用原形模式.</p><p>5、<strong>单例模式(Singleton pattern)</strong>: 确保一个类只有一个实例, 并提供全局访问点.</p><p>6、<strong>多例模式(Multition pattern)</strong>: 在一个解决方案中结合两个或多个模式, 以解决一般或重复发生的问题.</p><h2 id="四、结构型模式"><a href="#四、结构型模式" class="headerlink" title="四、结构型模式"></a>四、结构型模式</h2><p>1、<strong>适配器模式(Adapter pattern)</strong>: 将一个类的接口, 转换成客户期望的另一个接口. 适配器让原本接口不兼容的类可以合作无间. 对象适配器使用组合, 类适配器使用多重继承.</p><p>2、<strong>桥接模式(Bridge pattern)</strong>: 使用桥接模式通过将实现和抽象放在两个不同的类层次中而使它们可以独立改变.</p><p>3、<strong>组合模式(composite pattern)</strong>: 允许你将对象组合成树形结构来表现”整体/部分”层次结构. 组合能让客户以一致的方式处理个别对象以及对象组合.</p><p>4、<strong>装饰者模式(decorator pattern)</strong>: 动态地将责任附加到对象上, 若要扩展功能, 装饰者提供了比继承更有弹性的替代方案.</p><p>5、<strong>外观模式(facade pattern)</strong>: 提供了一个统一的接口, 用来访问子系统中的一群接口. 外观定义了一个高层接口, 让子系统更容易使用.</p><p>6、<strong>亨元模式(Flyweight Pattern)</strong>: 如想让某个类的一个实例能用来提供许多”虚拟实例”, 就使用蝇量模式.</p><p>7、<strong>代理模式(Proxy pattern)</strong>: 为另一个对象提供一个替身或占位符以控制对这个对象的访问.</p><h2 id="五、行为型模式"><a href="#五、行为型模式" class="headerlink" title="五、行为型模式"></a>五、行为型模式</h2><p>1、<strong>责任链模式(Chain of responsibility pattern)</strong>: 通过责任链模式, 你可以为某个请求创建一个对象链. 每个对象依序检查此请求并对其进行处理或者将它传给链中的下一个对象.</p><p>2、<strong>命令模式(Command pattern)</strong>: 将”请求”封闭成对象, 以便使用不同的请求,队列或者日志来参数化其他对象. 命令模式也支持可撤销的操作.</p><p>3<strong>、解释器模式(Interpreter pattern)</strong>: 使用解释器模式为语言创建解释器.</p><p>4、<strong>迭代器模式(iterator pattern)</strong>: 提供一种方法顺序访问一个聚合对象中的各个元素, 而又不暴露其内部的表示.</p><p>5、<strong>中介者模式(Mediator pattern)</strong> : 使用中介者模式来集中相关对象之间复杂的沟通和控制方式.</p><p>6、<strong>备忘录模式(Memento pattern)</strong>: 当你需要让对象返回之前的状态时(例如, 你的用户请求”撤销”), 你使用备忘录模式.</p><p>7、<strong>观察者模式(observer pattern)</strong>: 在对象之间定义一对多的依赖, 这样一来, 当一个对象改变状态, 依赖它的对象都会收到通知, 并自动更新.</p><p>8、<strong>状态模式(State pattern)</strong>: 允许对象在内部状态改变时改变它的行为, 对象看起来好象改了它的类.</p><p>9、<strong>策略模式(strategy pattern)</strong>: 定义了算法族, 分别封闭起来, 让它们之间可以互相替换, 此模式让算法的变化独立于使用算法的客户.</p><p>10、<strong>模板方法模式(Template pattern)</strong>: 在一个方法中定义一个算法的骨架, 而将一些步骤延迟到子类中. 模板方法使得子类可以在不改变算法结构的情况下, 重新定义算法中的某些步骤.</p><p>11、<strong>访问者模式(visitor pattern)</strong>: 当你想要为一个对象的组合增加新的能力, 且封装并不重要时, 就使用访问者模式.</p><h2 id="六、常用的设计模式（详细）"><a href="#六、常用的设计模式（详细）" class="headerlink" title="六、常用的设计模式（详细）"></a>六、常用的设计模式（详细）</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: Design Pattern&lt;br&gt;date: 2018-01-17 16:14:42&lt;/p&gt;
&lt;h2 id=&quot;tags&quot;&gt;&lt;a href=&quot;#tags&quot; class=&quot;headerlink&quot; title=&quot;tags:&quot;&gt;&lt;/a&gt;tags:&lt;/h2&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/01/17/hello-world/"/>
    <id>http://yoursite.com/2018/01/17/hello-world/</id>
    <published>2018-01-17T01:54:18.259Z</published>
    <updated>2018-01-17T01:54:18.259Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
